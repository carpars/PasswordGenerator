@model WPA_MVC.Models.Password
@{
    //string inputToUse = Model.InputToUse ? "1" : "0";
    ViewData["Title"] = "Generate Password";
}


<div class="h1">Generate a custom random password</div>
<h4>PENDIENTE:</h4>
<ol>
    <li>
        las &lt;label&gt; de los Settings asociarlas a su control
    </li>
    <li>
        Terminar de implementar todos los settings
    </li>
</ol>

@*<form method="post">*@
<div class="row">
    <div class="col-sm-3 col-md-2">
        <div class="form-group">
            <div class="input-group mb-1">
                <label class="lbl-for-control-form">
                    Length
                </label>
                <select id="length" class="form-control" asp-for="Length">
                    @{
                        int length = !String.IsNullOrWhiteSpace(Model.Length) ? Int32.Parse(Model.Length) : 0;
                        //int length = Model.Length;
                        int minLength = Model.MinLength;
                        int maxLength = Model.MaxLength;

                        for (int i = minLength; i <= maxLength; i++)
                        {
                            if (length == 0 && i == minLength)
                            {
                                <option class="container-1row-font-size-normal" selected>@i</option>
                            }
                            else if (length != 0 && i == length)
                            {
                                <option class="container-1row-font-size-normal" selected>@i</option>
                            }
                            else
                            {
                                <option class="container-1row-font-size-normal">@i</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="col-sm-9 col-md-10">
        <div class="form-group">
            <label class="lbl-for-control-form">
                Pattern Password (if any)
            </label>
            <div class="input-group mb-3">
                <div class="input-group-prepend input-group-icon">
                    <span class="input-group-text" data-toggle="tooltip" title="Sets length and symbols of the new password">
                        <span uk-icon="icon: info" ratio="1"></span>
                    </span>
                </div>
                <input id="txtExistingPassw" type="text" class="form-control" asp-for="InputPassword" value="@Model.InputPassword" placeholder="Enter the pattern password" />
                @*<label for="email" class="glyphicon glyphicon-search" rel="tooltip" title="email"></label>*@
                <div class="input-group-append">
                    <button id="btn-submit" class="btn btn-primary">Submit</button>
                    <button type="reset" class="btn btn-danger">Reset</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="form-group">
            <div class="input-group mb-1">
                <label class="lbl-for-control-form">
                    Your Password
                </label>
                <div class="input-group mb-2">
                    <input id="txt-new-passw" type="text" class="form-control" asp-for="OutputPassword" value="@Model.OutputPassword" />
                    <div class="input-group-append">
                        <button id="btn-copy" class="btn btn-primary">Copy</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <label class="lbl-for-control-form">
            Settings
        </label>
        <div class="form-group">
            <input id="save-preferences" type="checkbox" data-toggle="toggle" />
            <label for="save-preferences">Save My Preferences ( save all the settings below for later use )</label>
        </div>
        <div class="form-group">
            <label>
                <input id="hide-password" type="checkbox" data-toggle="toggle" />
                Hide password
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="auto-copy-to-clipboard" type="checkbox" data-toggle="toggle" />
                Auto-Copy to Clipboard ( copy the password automatically )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="include-symbols" type="checkbox" data-toggle="toggle" />
                Include Symbols ( e.g. $%&! )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="include-numbers" type="checkbox" data-toggle="toggle" />
                Include Numbers ( e.g. 123456 )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="include-lowercase" type="checkbox" data-toggle="toggle" />
                Include Lowercase Characters ( e.g. abcdefgh )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="include-uppercase" type="checkbox" data-toggle="toggle" />
                Include Uppercase Characters ( e.g. ABCDEFGH )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="exclude-similar" type="checkbox" data-toggle="toggle" />
                Exclude Similar Characters ( e.g. i, l, 1, L, o, 0, O )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="exclude-ambiguous" type="checkbox" data-toggle="toggle" />
                Exclude Ambiguous Characters ( { } [ ] ( ) / \ ' " ` ~ , ; : . < > )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="generate-on-device" type="checkbox" data-toggle="toggle" />
                Generate On Your Device ( do NOT send across the Internet )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="auto-select" type="checkbox" data-toggle="toggle" />
                Auto-Select ( select the password automatically )
            </label>
        </div>
        <div class="form-group">
            <label>
                <input id="load-settings-anywhere" type="checkbox" data-toggle="toggle" />
                Load My Settings Anywhere - URL to load my settings on other computers quickly
            </label>
        </div>
    </div>
</div>
@*</form>*@


@section Scripts {
    <script>
        let passwordRequestOnLoad = null;

        let passwordRequest = {
            inputPassword: '',
            length: '',
            settings:
            {
                hidePassword: '',
                includeLowercase: '',
                includeUppercase: '',
                autoCopyToClipboard: '',
                loadSettingsAnywhere: ''
            }
        };

         try
         {
             //let passwordToRequest = {
             //    inputPassword: '',
             //    outputPassword: '',
             //    length: '',
             //    minLength: '',
             //    maxLength: '',
             //    settings: {
             //        includeSymbols: 0,
             //        includeNUmbers: 0,
             //        includeLowercase: 0,
             //        includeUppercase: 0,
             //        excludeSimilar: 0,
             //        excludeAmbiguous: 0,
             //        generateOnDevice: 0,
             //        autoSelect: 0,
             //        autoCopyToClipboard: 0,
             //        loadSettingsAnywhere: $("#load-settings-anywhere").is(":checked")
             //    }
             //};

             $(document).ready(function() {
                 $("#btn-submit").on('click', SubmitPasswordRequestAjax);
                 $("#btn-copy").on('click', function (ev) {
                     CopyToClipboard($("#txt-new-passw").val());
                 });
                 //$("#hide-password-radio").attr("checked", "checked");
                 $('[data-toggle="tooltip"]').tooltip();

                 // TODO: check why with these Bootstrap 5 switchers, <label>
                 //     doesn0t handle its input with 'for'

                 $("label[for='save-preferences'").on('click', function (ev) {                     
                     $("#save-preferences").toggle();
                 });

                 let loadSettingsAnywhere = localStorage.getItem("loadSettingsAnywhere");
                 if (loadSettingsAnywhere) {
                     LoadData();
                 }

                 SaveData(function () {
                     passwordRequestOnLoad = passwordRequest;
                 });

                 // TODO: completar esto:
                 //window.on('neforeUnload', function (ev) {
                 //    alert("Before unload");
                 //    if (DataChanged) {
                 //        // PREGUNTAR SI QUIERE ABANDONAR??
                 //        if ($("#save-preferences").is(":checked")) {
                 //            SaveData();
                 //        }
                 //    }
                 //});
             });

             function SubmitPasswordRequestAjax()
             {
                 // PREBA para el try-catch: generar excepcion:
                 @*var ajaxRequest = new XMLHttpRequest();
                 // PAra enviar data en el PSST:
                 // TODO: ver por que el Chrome da 'Failed to execute' esta linea. Cambiado a jQuery
                 ajaxRequest.setRequestHeader();
                 ajaxRequest.open("POST", "@Url.Action("GetResult")", false);  // url = "/Home/About";
                 ajaxRequest.send("@Model"); // = XMLHttpRequest(GET, "sdfdf", false);
                 if (ajaxRequest.status == 404) {
                     //throw "EXCEPCIÓN JS PROVOCADA PARA PROBAR TRY-CATCH";
                 }
                 if (ajaxRequest.status == 200) {
                     alert(data.outputPasword);
                 }*@
                 if (DataChanged) {
                     SaveData();
                 }

                 //let passwordRequest = JSON.stringify(request);

                 let url = '@Url.Action("GetResult", "Home")';

                 $.ajax({
                     type: "POST",
                     url: url,
                     //contentType: 'json',
                     data: passwordRequest,
                     success: function (data) {
                         AjaxSuccess(data);
                     },
                     error: function (jqXHR, textStatus, errorThrown) {
                         AjaxError(jqXHR, textStatus, errorThrown);
                     }
                 });

                 @*// TODO: ver por que error Failed
                 $.post('@Url.Action("GetResult")', data, function(data) {
                     alert("FRIST DONE");
                 })
                 .done(function() {
                     alert("DONE");
                 })
                 .fail(function() {
                     alert("FAIL");
                 });*@
             }

             function AjaxSuccess(data) {
                 debugger;
                 if ($("#hide-password").is(":checked")) {
                     $("#txt-new-passw").css("opacity", "0");
                 }
                 else {
                     $("#txt-new-passw").css("opacity", "1");
                 }

                 // TODO: Remove for hidden password
                 if ($("#auto-select").is(":checked")) {
                     $("#txt-new-passw").focus();
                 }

                 $("#txt-new-passw").val(data.outputPassword);

                 CopyToClipboard(data.outputPassword);
             }

             function CopyToClipboard(textToCopy) {
                 let $temp = $("<input>");
                 $("body").append($temp);
                 $temp.val(textToCopy).select();
                 document.execCommand("copy");
                 $temp.remove();
             }

             function LoadData(SaveData) {
                 // Load the control data
                 /*$("#txtExistingPassw").val(localStorage.getItem("inputPassword"));*/
                 $("#length").val(localStorage.getItem("length"));

                 // TODO: cargar del web storage recorriendo
                 //     autom. las props del objetoç

                     if ($("#save-preferences").is(":checked") != localStorage.getItem("savePreferences")) {
                         $("#save-preferences").toggle();
                     }
                     if ($("#hide-password").is(":checked") != localStorage.getItem("hidePassword")) {
                         $("#hide-password").toggle();
                     }
                     if ($("#include-symbols").is(":checked") != localStorage.getItem("includeSymbols")) {
                         $("#include-symbols").toggle();
                     }
                     if ($("#include-numbers").is(":checked") != localStorage.getItem("includeNumbers")) {
                         $("#include-numbers").toggle();
                     }
                     if ($("#include-lowercase").is(":checked") != localStorage.getItem("includeLowercase")) {
                         $("#include-lowercase").toggle();
                     }
                     if ($("#include-uppercase").is(":checked") != localStorage.getItem("includeUppercase")) {
                         $("#include-uppercase").toggle();
                     }
                     if ($("#exclude-similar").is(":checked") != localStorage.getItem("excludeSimilar")) {
                         $("#exclude-similar").toggle();
                     }
                     if ($("#exclude-ambiguous").is(":checked") != localStorage.getItem("excludeAmbiguous")) {
                         $("#exclude-ambiguous").toggle();
                     }
                     if ($("#generate-on-device").is(":checked") != localStorage.getItem("generateOnDevice")) {
                         $("#generate-on-device").toggle();
                     }
                     if ($("#auto-select").is(":checked") != localStorage.getItem("autoSelect")) {
                         $("#auto-select").toggle();
                     }
                     if ($("#auto-copy-to-clipboard").is(":checked") != localStorage.getItem("autoCopyToClipboard")) {
                         $("auto-copy-to-clipboard").toggle();
                     }
                     if ($("#load-settings-anywhere").is(":checked") != localStorage.getItem("loadSettingsAnywhere")) {
                         $("#load-settings-anywhere").toggle();
                     }


                 // Load the variable
                 passwordRequest = {
                     inputPassword: $("#txtExistingPassw").val(),
                     length: $("#length").val(),
                     settings:
                     {
                         savePreferences: $("#save-preferences").is(":checked"),
                         hidePassword: $("#hide-password").is(":checked"),
                         includeSymbols: $("#include-symbols").is(":checked"),
                         includeNumbers: $("#include-numbers").is(":checked"),
                         includeLowercase: $("#include-lowercase").is(":checked"),
                         includeUppercase: $("#include-uppercase").is(":checked"),
                         excludeSimilar: $("#exclude-similar").is(":checked"),
                         excludeAmbiguous: $("#exclude-ambiguous").is(":checked"),
                         generateOnDevice: $("#generate-on-device").is(":checked"),
                         autoSelect: $("#auto-select").is(":checked"),
                         autoCopyToClipboard: $("#auto-copy-to-clipboard").is(":checked"),
                         loadSettingsAnywhere: $("#load-settings-anywhere").is(":checked")
                     }
                 };
             }

             function SaveData() {
                 if ($("#save-preferences").is(":checked")) {
                     // Save the preferences

                     // TODO: guardar en web storage recorriendo
                     //     autom. las props del objeto
                     if ($("#length").val() != localStorage.getItem("length")) {
                         localStorage.setItem("length", $("#length").val());                         
                     }
                     if ($("#save-preferences").is(":checked") != localStorage.getItem("savePreferences")) {
                         localStorage.setItem("savePreferences", $("#save-preferences").is(":checked"));
                     }
                     if ($("#hide-password").is(":checked") != localStorage.getItem("hidePassword")) {
                         localStorage.setItem("hidePassword", $("#hide-password").is(":checked"));
                     }
                     if ($("#include-symbols").is(":checked") != localStorage.getItem("includeSymbols")) {
                         localStorage.setItem("includeSymbols", $("#include-symbols").is(":checked"));
                     }
                     if ($("#include-numbers").is(":checked") != localStorage.getItem("includeNumbers")) {
                         localStorage.setItem("includeNumbers", $("#include-numbers").is(":checked"));
                     }
                     if ($("#include-lowercase").is(":checked") != localStorage.getItem("includeLowercase")) {
                         localStorage.setItem("includeLowercase", $("#include-lowercase").is(":checked"));
                     }
                     if ($("#include-uppercase").is(":checked") != localStorage.getItem("includeUppercase")) {
                         localStorage.setItem("includeUppercase", $("#include-uppercase").is(":checked"));
                     }
                     if ($("#exclude-similar").is(":checked") != localStorage.getItem("excludeSimilar")) {
                         localStorage.setItem("excludeSimilar", $("#exclude-similar").is(":checked"));
                     }
                     if ($("#exclude-ambiguous").is(":checked") != localStorage.getItem("excludeAmbiguous")) {
                         localStorage.setItem("excludeAmbiguous", $("#exclude-ambiguous").is(":checked"));
                     }
                     if ($("#generate-on-device").is(":checked") != localStorage.getItem("generateOnDevice")) {
                         localStorage.setItem("generateOnDevice", $("#generate-on-device").is(":checked"));
                     }
                     if ($("#auto-select").is(":checked") != localStorage.getItem("autoSelect")) {
                         localStorage.setItem("autoSelect", $("#auto-select").is(":checked"));
                     }
                     if ($("#auto-copy-to-clipboard").is(":checked") != localStorage.getItem("autoCopyToClipboard")) {
                         localStorage.setItem("autoCopyToClipboard", $("#auto-copy-to-clipboard").is(":checked"));
                     }
                     if ($("#load-settings-anywhere").is(":checked") != localStorage.getItem("loadSettingsAnywhere")) {
                         localStorage.setItem("loadSettingsAnywhere", $("#load-settings-anywhere").is(":checked"));
                     }
                 }

                 // Save the variable
                 passwordRequest = {
                     inputPassword: $("#txtExistingPassw").val(),
                     length: $("#length").val(),
                     settings:
                     {
                         savePreferences: $("#save-preferences").is(":checked"),
                         hidePassword: $("#hide-password").is(":checked"),
                         includeSymbols: $("#hide-symbols").is(":checked"),
                         includeNumbers: $("#hide-numbers").is(":checked"),
                         includeLowercase: $("#include-lowercase").is(":checked"),
                         includeUppercase: $("#include-uppercase").is(":checked"),
                         excludeSimilar: $("#exclude-similar").is(":checked"),
                         excludeAmbiguous: $("#exclude-ambiguous").is(":checked"),
                         generateOnDevice: $("#generate-on-device").is(":checked"),
                         autoSelect: $("#ato-select").is(":checked"),
                         autoCopyToClipboard: $("#auto-copy-to-clipboard").is(":checked"),
                         loadSettingsAnywhere: $("#load-settings-anywhere").is(":checked")
                     }
                 };
             }

             function DataChanged() {
                 if (JSON.stringify(passwordRequest) != JSON.stringify(passwordRequestOnLoad)) {
                     return true;
                 } else {
                     return false;
                 }
             }

             function AjaxError(jqXHR, textStatus, errorThrown) {
                 alert("Ajax error..");
             }
         }
         catch (exception)
         {
             /* Handle any exceptions here.
             This example displays the exception to the user */
             alert(exception);
         }
    </script>
}
